(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,":root {\n    --h2-size: 36px;\n    --h3-size: 24px;\n    --p-size: 16px;\n\n    --section-padding: 20px 10% 20px 10%;\n}\n\n\n.header{\n    background-color: orange;\n    height:100px;\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr;\n}\n\n#navbar{\n    justify-self: right;\n    grid-column: 2/3;\n    display: flex;\n    gap: 30px;\n    margin-right: 30px;\n\n}\n\n.nav-item-container {\n    background-color: green;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    flex: 1;\n}\n\n\n\n#logo-container{\n    justify-self: left;\n    grid-column: 1/2;\n\n    background-color: pink;\n    height: 50px;\n    width: 100px;\n    margin: auto;\n    margin-left: 30px;\n}\n.section1{\n    background-color: green;\n    height: 400px;\n\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n\n    padding: var(--section-padding);\n}\n\n\n#section1-img{\n    width: auto;\n    height: 50vh;\n}\n\n.section2{\n    background-color: pink;\n    height: 400px;\n\n    padding: var(--section-padding); \n}\n\n.footer{\n    background-color: green;\n    height: 200px;\n}\n\n.h3-text{\n    font-size: var(--h3-size);\n}\n\n.paragraph{\n    font-size: var(--p-size);\n}\n\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,eAAe;IACf,cAAc;;IAEd,oCAAoC;AACxC;;;AAGA;IACI,wBAAwB;IACxB,YAAY;;IAEZ,aAAa;IACb,8BAA8B;IAC9B,uBAAuB;AAC3B;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,aAAa;IACb,SAAS;IACT,kBAAkB;;AAEtB;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,OAAO;AACX;;;;AAIA;IACI,kBAAkB;IAClB,gBAAgB;;IAEhB,sBAAsB;IACtB,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,iBAAiB;AACrB;AACA;IACI,uBAAuB;IACvB,aAAa;;IAEb,aAAa;IACb,8BAA8B;;IAE9B,+BAA+B;AACnC;;;AAGA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,sBAAsB;IACtB,aAAa;;IAEb,+BAA+B;AACnC;;AAEA;IACI,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,wBAAwB;AAC5B",sourcesContent:[":root {\n    --h2-size: 36px;\n    --h3-size: 24px;\n    --p-size: 16px;\n\n    --section-padding: 20px 10% 20px 10%;\n}\n\n\n.header{\n    background-color: orange;\n    height:100px;\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr;\n}\n\n#navbar{\n    justify-self: right;\n    grid-column: 2/3;\n    display: flex;\n    gap: 30px;\n    margin-right: 30px;\n\n}\n\n.nav-item-container {\n    background-color: green;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    flex: 1;\n}\n\n\n\n#logo-container{\n    justify-self: left;\n    grid-column: 1/2;\n\n    background-color: pink;\n    height: 50px;\n    width: 100px;\n    margin: auto;\n    margin-left: 30px;\n}\n.section1{\n    background-color: green;\n    height: 400px;\n\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n\n    padding: var(--section-padding);\n}\n\n\n#section1-img{\n    width: auto;\n    height: 50vh;\n}\n\n.section2{\n    background-color: pink;\n    height: 400px;\n\n    padding: var(--section-padding); \n}\n\n.footer{\n    background-color: green;\n    height: 200px;\n}\n\n.h3-text{\n    font-size: var(--h3-size);\n}\n\n.paragraph{\n    font-size: var(--p-size);\n}\n\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var d=0;d<n.length;d++){var u=[].concat(n[d]);r&&a[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),i&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=i):u[4]="".concat(i)),e.push(u))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},a=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],u=o[d]||0,A="".concat(d," ").concat(u);o[d]=u+1;var p=t(A),l={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(l);else{var f=i(l,r);r.byIndex=c,e.splice(c,0,{identifier:A,updater:f,references:1})}a.push(A)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var c=t(o[a]);e[c].references--}for(var s=r(n,i),d=0;d<o.length;d++){var u=t(o[d]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),i=t.n(r),o=t(569),a=t.n(o),c=t(565),s=t.n(c),d=t(216),u=t.n(d),A=t(589),p=t.n(A),l=t(28),f={};function g(n,e="#",t="#",r="",i,o,a){const c=document.createElement(n);return c.innerText=r,c.className=e,c.id=t,c.content=a,i&&i.appendChild(c),"a"===n&&o&&(c.href=o),c}function h(n,e){n.appendChild(e)}function m(){const n=g("div","body-container"),e=g("div","section1");h(n,e);const t=g("div"),r=g("h1","","","Pass All of Your Civil Engineering classes with A"),i=g("p","paragraph","p-tutoring-section","CivETech helps our students to gain the skills and knowledge to excel in every assignment and exams in all Civil Engineering subjects"),o=g("div","","Section1-Button-Container"),a=g("button","","Section1-Button1","Get started"),c=g("button","","Section1-Button2","Learn more");h(o,a),h(o,c),h(t,r),h(t,i),h(t,o);const s=g("div"),d=g("img","","section1-img");d.src="/src/img/wilson-main-image.png",h(s,d),h(e,t),h(e,s);const u=g("div","section2");return function(n,e,t,r,i,o,a){const c=g("h3","h3-text","h3-pe-section","Prepare for the PE Exam"),s=g("p","paragraph","p-pe-section","One-on-One tutoring    can help you answer any last minute questions you have in any section of the PE");h(a,c),h(a,s)}(0,0,0,0,0,0,u),h(n,u),n}function v(){const n=document.createElement("div");return n.innerText="this is a Categories test",n}function C(){const n=document.createElement("div");return n.innerText="this is a Pricing test",n}function x(){const n=document.createElement("div");return n.innerText="this is a Get Started test",n}function B(){const n=document.createElement("div");return n.innerText="this is a About Us test",n}function I(){const n=document.createElement("div");return n.innerText="this is a Success Stories test",n}f.styleTagTransform=p(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=u(),e()(l.Z,f),l.Z&&l.Z.locals&&l.Z.locals;const y=document.querySelector("#content"),b=document.createElement("div","","header-container"),E=document.createElement("div","","middle-container"),k=document.createElement("div","","footer-container");function w(n,e){const t=n(),r=e;r.innerHTML="",r.appendChild(t)}y.appendChild(b),y.appendChild(E),y.appendChild(k),w((function(){const n=g("div","header"),e=g("div","","logo-container"),t=g("div","","navbar"),r=g("div","nav-item-container"),i=g("div","nav-item-container"),o=g("div","nav-item-container"),a=g("div","nav-item-container"),c=g("div","nav-item-container"),s=g("div","nav-item-container"),d=[r,i,o,a,c,s];g("a","nav-item","home-link","Home",r,"#",m),g("a","nav-item","categories-link","Categories",a,"#",v),g("a","nav-item","success-stories-link","Success Stores",o,"#",I),g("a","nav-item","pricing-link","Pricing",c,"#",C),g("a","nav-item","about-link","About",i,"#",B),g("a","nav-item","get-started-link","Get Started",s,"#",x);for(let n=0;n<d.length;n++)h(t,d[n]);return n.appendChild(e),n.appendChild(t),n}),b),w(m,E),w((function(){const n=document.createElement("div");n.className="footer";const e=g("p","","footer-text");return n.appendChild(e),n}),k),document.querySelectorAll(".nav-item").forEach((n=>n.addEventListener("click",(()=>{w(n.content,E)}))))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,